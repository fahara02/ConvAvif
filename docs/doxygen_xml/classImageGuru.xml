<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classImageGuru" kind="class" language="C++" prot="public">
    <compoundname>ImageGuru</compoundname>
    <includes refid="imageGuru_8h" local="no">imageGuru.h</includes>
    <innerclass refid="structImageGuru_1_1imageSupport" prot="public">ImageGuru::imageSupport</innerclass>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classImageGuru_1a584ee80b421a877e66108805931fd2d0" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>std::array&lt; <ref refid="structImageGuru_1_1imageSupport" kindref="compound">imageSupport</ref>, 8 &gt;</type>
        <definition>std::array&lt;imageSupport, 8&gt; ImageGuru::supported_image</definition>
        <argsstring></argsstring>
        <name>supported_image</name>
        <qualifiedname>ImageGuru::supported_image</qualifiedname>
        <initializer>= {
      {{<ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a907e06a16862d82ca6907a28a68d0ad6" kindref="member">ImageType::JPEG</ref>, true}, 
       {<ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a55505ba281b015ec31f03ccb151b2a34" kindref="member">ImageType::PNG</ref>, true},  
       {<ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a95a66bab4c0c0fd8387e680daeff99a8" kindref="member">ImageType::GIF</ref>, false}, 
       {<ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0aa5d5ca1447586e23dc011f8c0cc0a6db" kindref="member">ImageType::BMP</ref>, false},
       {<ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0ace0dbe5045edda1a0e9686ce899798ea" kindref="member">ImageType::TIFF</ref>, false},
       {<ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0ab8dbf614b2c3a603c8c8c723a3f6eb7a" kindref="member">ImageType::WEBP</ref>, false},
       {<ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a35825f52ac558b8590c66431d1aa9c93" kindref="member">ImageType::AVIF</ref>, true},
       {<ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a696b031073e74bf2cb98e5ef201d4aa3" kindref="member">ImageType::UNKNOWN</ref>, false}}}</initializer>
        <briefdescription>
<para>Array defining which image formats are supported for conversion. </para>
        </briefdescription>
        <detaileddescription>
<para>This array maps each <ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0" kindref="member">ImageType</ref> to a boolean indicating whether that format can be converted to AVIF by the library. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/imageGuru.h" line="184" column="31" bodyfile="include/imageGuru.h" bodystart="184" bodyend="192"/>
        <referencedby refid="classImageGuru_1a9656fc9753f60aa1dda76030a7906d9f" compoundref="imageGuru_8h" startline="139" endline="146">isSupported</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classImageGuru_1a9cb88f9bb55997d72df4b4e9ab61fc35" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0" kindref="member">ImageType</ref></type>
        <definition>static ImageType ImageGuru::GetImageType</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;data)</argsstring>
        <name>GetImageType</name>
        <qualifiedname>ImageGuru::GetImageType</qualifiedname>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Detect the image format from binary data. </para>
        </briefdescription>
        <detaileddescription>
<para>Examines the file header/magic bytes in the provided data to determine the image format.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Binary image data to analyze </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Detected <ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0" kindref="member">ImageType</ref>, or <ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a696b031073e74bf2cb98e5ef201d4aa3" kindref="member">ImageType::UNKNOWN</ref> if format isn&apos;t recognized </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/imageGuru.h" line="42" column="20" bodyfile="include/imageGuru.h" bodystart="42" bodyend="102"/>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a35825f52ac558b8590c66431d1aa9c93" compoundref="imageGuru_8h" startline="23">AVIF</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0aa5d5ca1447586e23dc011f8c0cc0a6db" compoundref="imageGuru_8h" startline="23">BMP</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a95a66bab4c0c0fd8387e680daeff99a8" compoundref="imageGuru_8h" startline="23">GIF</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a907e06a16862d82ca6907a28a68d0ad6" compoundref="imageGuru_8h" startline="23">JPEG</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a55505ba281b015ec31f03ccb151b2a34" compoundref="imageGuru_8h" startline="23">PNG</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0ace0dbe5045edda1a0e9686ce899798ea" compoundref="imageGuru_8h" startline="23">TIFF</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a696b031073e74bf2cb98e5ef201d4aa3" compoundref="imageGuru_8h" startline="23">UNKNOWN</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0ab8dbf614b2c3a603c8c8c723a3f6eb7a" compoundref="imageGuru_8h" startline="23">WEBP</references>
        <referencedby refid="imageconverter_8h_1a739d2db06147b652cbc5145fb97925d5" compoundref="imageconverter_8cpp" startline="243" endline="300">convertImageDirect</referencedby>
        <referencedby refid="classImageGuru_1af8b04916cf74b30b69ecdbde53ae7b4f" compoundref="imageGuru_8h" startline="121" endline="123">IsSpecificType</referencedby>
        <referencedby refid="classImageGuru_1ad4730c44991d536d63807ed17361540d" compoundref="imageGuru_8h" startline="110" endline="112">IsValid</referencedby>
      </memberdef>
      <memberdef kind="function" id="classImageGuru_1ad4730c44991d536d63807ed17361540d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImageGuru::IsValid</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;data)</argsstring>
        <name>IsValid</name>
        <qualifiedname>ImageGuru::IsValid</qualifiedname>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Check if binary data appears to be a valid image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Binary data to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the data appears to be a recognized image format, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/imageGuru.h" line="110" column="15" bodyfile="include/imageGuru.h" bodystart="110" bodyend="112"/>
        <references refid="classImageGuru_1a9cb88f9bb55997d72df4b4e9ab61fc35" compoundref="imageGuru_8h" startline="42" endline="102">GetImageType</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a696b031073e74bf2cb98e5ef201d4aa3" compoundref="imageGuru_8h" startline="23">UNKNOWN</references>
      </memberdef>
      <memberdef kind="function" id="classImageGuru_1af8b04916cf74b30b69ecdbde53ae7b4f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImageGuru::IsSpecificType</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;data, ImageType type)</argsstring>
        <name>IsSpecificType</name>
        <qualifiedname>ImageGuru::IsSpecificType</qualifiedname>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0" kindref="member">ImageType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Check if binary data matches a specific image format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Binary data to check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Specific <ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0" kindref="member">ImageType</ref> to check for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the data matches the specified format, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/imageGuru.h" line="121" column="15" bodyfile="include/imageGuru.h" bodystart="121" bodyend="123"/>
        <references refid="classImageGuru_1a9cb88f9bb55997d72df4b4e9ab61fc35" compoundref="imageGuru_8h" startline="42" endline="102">GetImageType</references>
      </memberdef>
      <memberdef kind="function" id="classImageGuru_1a9656fc9753f60aa1dda76030a7906d9f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ImageGuru::isSupported</definition>
        <argsstring>(const ImageType type)</argsstring>
        <name>isSupported</name>
        <qualifiedname>ImageGuru::isSupported</qualifiedname>
        <param>
          <type>const <ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0" kindref="member">ImageType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Check if a specific image type is supported for conversion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0" kindref="member">ImageType</ref> to check support for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the format is supported for conversion, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/imageGuru.h" line="139" column="15" bodyfile="include/imageGuru.h" bodystart="139" bodyend="146"/>
        <references refid="classImageGuru_1a584ee80b421a877e66108805931fd2d0" compoundref="imageGuru_8h" startline="184" endline="192">supported_image</references>
        <referencedby refid="imageconverter_8h_1a739d2db06147b652cbc5145fb97925d5" compoundref="imageconverter_8cpp" startline="243" endline="300">convertImageDirect</referencedby>
      </memberdef>
      <memberdef kind="function" id="classImageGuru_1a250967309e02e5a4a2226361f56cf5f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string ImageGuru::typeToString</definition>
        <argsstring>(const ImageType type)</argsstring>
        <name>typeToString</name>
        <qualifiedname>ImageGuru::typeToString</qualifiedname>
        <param>
          <type>const <ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0" kindref="member">ImageType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Convert an <ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0" kindref="member">ImageType</ref> enum to a string representation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0" kindref="member">ImageType</ref> to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation of the image type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/imageGuru.h" line="154" column="22" bodyfile="include/imageGuru.h" bodystart="154" bodyend="175"/>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a35825f52ac558b8590c66431d1aa9c93" compoundref="imageGuru_8h" startline="23">AVIF</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0aa5d5ca1447586e23dc011f8c0cc0a6db" compoundref="imageGuru_8h" startline="23">BMP</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a95a66bab4c0c0fd8387e680daeff99a8" compoundref="imageGuru_8h" startline="23">GIF</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a907e06a16862d82ca6907a28a68d0ad6" compoundref="imageGuru_8h" startline="23">JPEG</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a55505ba281b015ec31f03ccb151b2a34" compoundref="imageGuru_8h" startline="23">PNG</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0ace0dbe5045edda1a0e9686ce899798ea" compoundref="imageGuru_8h" startline="23">TIFF</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0a696b031073e74bf2cb98e5ef201d4aa3" compoundref="imageGuru_8h" startline="23">UNKNOWN</references>
        <references refid="imageGuru_8h_1a3154c405c975616503bac23f51b78fc0ab8dbf614b2c3a603c8c8c723a3f6eb7a" compoundref="imageGuru_8h" startline="23">WEBP</references>
        <referencedby refid="imageconverter_8h_1a739d2db06147b652cbc5145fb97925d5" compoundref="imageconverter_8cpp" startline="243" endline="300">convertImageDirect</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Utility class for image format detection and support checking. </para>
    </briefdescription>
    <detaileddescription>
<para>This class provides static methods to detect image formats from binary data and check whether specific formats are supported for conversion to AVIF. </para>
    </detaileddescription>
    <location file="include/imageGuru.h" line="31" column="1" bodyfile="include/imageGuru.h" bodystart="31" bodyend="193"/>
    <listofallmembers>
      <member refid="classImageGuru_1a9cb88f9bb55997d72df4b4e9ab61fc35" prot="public" virt="non-virtual"><scope>ImageGuru</scope><name>GetImageType</name></member>
      <member refid="classImageGuru_1af8b04916cf74b30b69ecdbde53ae7b4f" prot="public" virt="non-virtual"><scope>ImageGuru</scope><name>IsSpecificType</name></member>
      <member refid="classImageGuru_1a9656fc9753f60aa1dda76030a7906d9f" prot="public" virt="non-virtual"><scope>ImageGuru</scope><name>isSupported</name></member>
      <member refid="classImageGuru_1ad4730c44991d536d63807ed17361540d" prot="public" virt="non-virtual"><scope>ImageGuru</scope><name>IsValid</name></member>
      <member refid="classImageGuru_1a584ee80b421a877e66108805931fd2d0" prot="private" virt="non-virtual"><scope>ImageGuru</scope><name>supported_image</name></member>
      <member refid="classImageGuru_1a250967309e02e5a4a2226361f56cf5f6" prot="public" virt="non-virtual"><scope>ImageGuru</scope><name>typeToString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
