<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="imagebuffer_8h" kind="file" language="C++">
    <compoundname>imagebuffer.h</compoundname>
    <includes local="no">emscripten.h</includes>
    <includes local="no">emscripten/bind.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includedby refid="imageconverter_8h" local="yes">include/imageconverter.h</includedby>
    <includedby refid="result_8h" local="yes">include/result.h</includedby>
    <includedby refid="bind_8cpp" local="yes">src/bind.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/imagebuffer.h</label>
        <link refid="imagebuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>emscripten.h</label>
      </node>
      <node id="3">
        <label>emscripten/bind.h</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>include/avif_helper.h</label>
        <link refid="avif__helper_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/imagebuffer.h</label>
        <link refid="imagebuffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/imageconverter.h</label>
        <link refid="imageconverter_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/bind.cpp</label>
        <link refid="bind_8cpp"/>
      </node>
      <node id="4">
        <label>src/imageconverter.cpp</label>
        <link refid="imageconverter_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classImageBuffer" prot="public">ImageBuffer</innerclass>
    <briefdescription>
<para>Image buffer management for AVIF conversion results. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>ConvAvif Developer </para>
</simplesect>
<simplesect kind="date"><para>2025</para>
</simplesect>
This file defines the <ref refid="classImageBuffer" kindref="compound">ImageBuffer</ref> class which encapsulates the raw binary data of a converted image and provides methods to access it from both C++ and JavaScript contexts. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IMAGE_BUFFER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMAGE_BUFFER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;emscripten.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;emscripten/bind.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classImageBuffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classImageBuffer_1ae35022dca7c053de97b73c9e55d7a6c0" kindref="member">ImageBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="classImageBuffer_1ae35022dca7c053de97b73c9e55d7a6c0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classImageBuffer_1ae35022dca7c053de97b73c9e55d7a6c0" kindref="member">ImageBuffer</ref>(std::vector&lt;uint8_t&gt;<sp/>data)<sp/>:<sp/><ref refid="classImageBuffer_1a63f6553c8908a439066d3e51b3897dc4" kindref="member">data_</ref>(std::move(data))<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classImageBuffer_1a092d25f5f27ff06124cd28764bf091cb" refkind="member"><highlight class="normal"><sp/><sp/>emscripten::val<sp/><ref refid="classImageBuffer_1a092d25f5f27ff06124cd28764bf091cb" kindref="member">getData</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>view<sp/>into<sp/>the<sp/>vector&apos;s<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emscripten::val(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emscripten::typed_memory_view(<ref refid="classImageBuffer_1a63f6553c8908a439066d3e51b3897dc4" kindref="member">data_</ref>.size(),<sp/><ref refid="classImageBuffer_1a63f6553c8908a439066d3e51b3897dc4" kindref="member">data_</ref>.data()));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classImageBuffer_1ab2fce31da3b99684f3621762e9230022" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classImageBuffer_1ab2fce31da3b99684f3621762e9230022" kindref="member">getSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classImageBuffer_1a63f6553c8908a439066d3e51b3897dc4" kindref="member">data_</ref>.size();<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classImageBuffer_1a5c2bf3c39d985e8f25726764d4bd29f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>&amp;<ref refid="classImageBuffer_1a5c2bf3c39d985e8f25726764d4bd29f4" kindref="member">getRawData</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classImageBuffer_1a63f6553c8908a439066d3e51b3897dc4" kindref="member">data_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61" refid="classImageBuffer_1a63f6553c8908a439066d3e51b3897dc4" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/><ref refid="classImageBuffer_1a63f6553c8908a439066d3e51b3897dc4" kindref="member">data_</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/imagebuffer.h"/>
  </compounddef>
</doxygen>
