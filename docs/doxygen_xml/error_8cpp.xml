<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="error_8cpp" kind="file" language="C++">
    <compoundname>error.cpp</compoundname>
    <includes refid="error_8h" local="yes">error.h</includes>
    <incdepgraph>
      <node id="2">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/error.cpp</label>
        <link refid="error_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>avif/avif.h</label>
      </node>
      <node id="4">
        <label>emscripten/val.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="error_8cpp_1a5ad5e023f34da8b98e088da72c1b3744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4" kindref="member">ConverterError</ref></type>
        <definition>ConverterError avifToConverterError</definition>
        <argsstring>(avifResult result)</argsstring>
        <name>avifToConverterError</name>
        <param>
          <type>avifResult</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Converts an AVIF library error code to a <ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4" kindref="member">ConverterError</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Maps the native AVIF library error codes to the application&apos;s error enum.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>AVIF library result code </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Equivalent <ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4" kindref="member">ConverterError</ref> code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/error.cpp" line="6" column="16" bodyfile="src/error.cpp" bodystart="6" bodyend="10"/>
        <references refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a23e18d96edff50279e7705d60dddff28" compoundref="error_8h" startline="36">AVIF_ERROR_START</references>
        <referencedby refid="imageconverter_8h_1ad6ba1bd00ba7d9e8f381d223af9f4343" compoundref="imageconverter_8cpp" startline="47" endline="224">convert_image</referencedby>
        <referencedby refid="avif__helper_8h_1ae966f90c71b8f126e1371e4b7be62f57" compoundref="avif__helper_8h" startline="81" endline="92">SetAvifOption</referencedby>
      </memberdef>
      <memberdef kind="function" id="error_8cpp_1a0ef438c9db81c195e8b44bab972a415c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string getErrorMessage</definition>
        <argsstring>(ConverterError error)</argsstring>
        <name>getErrorMessage</name>
        <param>
          <type><ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4" kindref="member">ConverterError</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Get a human-readable error message for an error code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classError" kindref="compound">Error</ref> code to get the message for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Standard error message for the given code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/error.cpp" line="13" column="13" bodyfile="src/error.cpp" bodystart="13" bodyend="42"/>
        <references refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a23e18d96edff50279e7705d60dddff28" compoundref="error_8h" startline="36">AVIF_ERROR_START</references>
        <references refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4ae1382465cfba6130c05d8b7ea77aa498" compoundref="error_8h" startline="30">CONVERSION_FAILED</references>
        <references refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a378f312bf061d37517fc4d7bad1779da" compoundref="error_8h" startline="29">ENCODER_CREATION_FAILED</references>
        <references refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4aa0e09e20c5542d45de3253addf5714d6" compoundref="error_8h" startline="31">ENCODING_FAILED</references>
        <references refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a96e580b9f181d5ec9d7c2d126cbf30f3" compoundref="error_8h" startline="28">IMAGE_LOAD_FAILED</references>
        <references refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a85d5c1a701eb47300e4687b82001fac9" compoundref="error_8h" startline="26">INVALID_DIMENSIONS</references>
        <references refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a11dcd80a782dade1bc316be2fbac2581" compoundref="error_8h" startline="34">INVALID_QUANTIZER_VALUES</references>
        <references refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4ae0aa021e21dddbd6d8cecec71e9cf564" compoundref="error_8h" startline="25">OK</references>
        <references refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4ac56ddb8056b120c9d5fee05981f219c6" compoundref="error_8h" startline="33">OUT_OF_MEMORY</references>
      </memberdef>
      <memberdef kind="function" id="error_8cpp_1ac51e0905a2ad6e6b5f3ab7eafd87f2a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>emscripten::val</type>
        <definition>emscripten::val toJsError</definition>
        <argsstring>(const Error &amp;e)</argsstring>
        <name>toJsError</name>
        <param>
          <type>const <ref refid="classError" kindref="compound">Error</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Convert a C++ <ref refid="classError" kindref="compound">Error</ref> object to a JavaScript error object. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates a JavaScript error object with properties for code, message, and stackTrace suitable for returning to JavaScript code.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The C++ <ref refid="classError" kindref="compound">Error</ref> object to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>JavaScript object representing the error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/error.cpp" line="44" column="17" bodyfile="src/error.cpp" bodystart="44" bodyend="53"/>
        <references refid="classError_1af99b67523cea6feba2f76679f97f2cfe" compoundref="error_8h" startline="47">Error::code</references>
        <references refid="classError_1aa4713ef3ee9c3c0da43a54b01949510d" compoundref="error_8h" startline="48">Error::message</references>
        <references refid="classError_1a4051d2413bfd2780250043fc9c412865" compoundref="error_8h" startline="49">Error::stackTrace</references>
        <referencedby refid="imageconverter_8h_1a739d2db06147b652cbc5145fb97925d5" compoundref="imageconverter_8cpp" startline="243" endline="300">convertImageDirect</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8h" kindref="compound">error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="classError_1aeb2eed928f08439970781a1ea5ea2acb" refkind="member"><highlight class="normal"><ref refid="classError_1aeb2eed928f08439970781a1ea5ea2acb" kindref="member">Error::Error</ref>(<ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4" kindref="member">ConverterError</ref><sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;trace)</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classError_1af99b67523cea6feba2f76679f97f2cfe" kindref="member">code</ref>(c),<sp/><ref refid="classError_1aa4713ef3ee9c3c0da43a54b01949510d" kindref="member">message</ref>(msg),<sp/><ref refid="classError_1a4051d2413bfd2780250043fc9c412865" kindref="member">stackTrace</ref>(trace)<sp/>{}</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="error_8h_1a5ad5e023f34da8b98e088da72c1b3744" refkind="member"><highlight class="normal"><ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4" kindref="member">ConverterError</ref><sp/><ref refid="error_8cpp_1a5ad5e023f34da8b98e088da72c1b3744" kindref="member">avifToConverterError</ref>(avifResult<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4" kindref="member">ConverterError</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a23e18d96edff50279e7705d60dddff28" kindref="member">ConverterError::AVIF_ERROR_START</ref>)<sp/>+</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>error<sp/>message<sp/>as<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="error_8h_1a0ef438c9db81c195e8b44bab972a415c" refkind="member"><highlight class="normal">std::string<sp/><ref refid="error_8cpp_1a0ef438c9db81c195e8b44bab972a415c" kindref="member">getErrorMessage</ref>(<ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4" kindref="member">ConverterError</ref><sp/>error)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(error)<sp/>&gt;=</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a23e18d96edff50279e7705d60dddff28" kindref="member">ConverterError::AVIF_ERROR_START</ref>))<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>avifResult<sp/>avifError<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">avifResult</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(error)<sp/>-</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a23e18d96edff50279e7705d60dddff28" kindref="member">ConverterError::AVIF_ERROR_START</ref>));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>avifResultToString(avifError);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(error)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4ae0aa021e21dddbd6d8cecec71e9cf564" kindref="member">ConverterError::OK</ref>:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Success&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a85d5c1a701eb47300e4687b82001fac9" kindref="member">ConverterError::INVALID_DIMENSIONS</ref>:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>dimensions<sp/>(1-8192px<sp/>allowed)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a96e580b9f181d5ec9d7c2d126cbf30f3" kindref="member">ConverterError::IMAGE_LOAD_FAILED</ref>:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>image&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a378f312bf061d37517fc4d7bad1779da" kindref="member">ConverterError::ENCODER_CREATION_FAILED</ref>:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>AVIF<sp/>encoder&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4ae1382465cfba6130c05d8b7ea77aa498" kindref="member">ConverterError::CONVERSION_FAILED</ref>:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>convert&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4aa0e09e20c5542d45de3253addf5714d6" kindref="member">ConverterError::ENCODING_FAILED</ref>:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>encode&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4ac56ddb8056b120c9d5fee05981f219c6" kindref="member">ConverterError::OUT_OF_MEMORY</ref>:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="error_8h_1ae34bfe75944861aa76edbf308eaeedc4a11dcd80a782dade1bc316be2fbac2581" kindref="member">ConverterError::INVALID_QUANTIZER_VALUES</ref>:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>quantizer<sp/>values<sp/>(min<sp/>&gt;<sp/>max)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="error_8h_1ac51e0905a2ad6e6b5f3ab7eafd87f2a4" refkind="member"><highlight class="normal">emscripten::val<sp/><ref refid="error_8cpp_1ac51e0905a2ad6e6b5f3ab7eafd87f2a4" kindref="member">toJsError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classError" kindref="compound">Error</ref><sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>emscripten::val<sp/>jresult<sp/>=<sp/>emscripten::val::object();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>emscripten::val<sp/>errorObj<sp/>=<sp/>emscripten::val::object();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>errorObj.set(</highlight><highlight class="stringliteral">&quot;code&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e.<ref refid="classError_1af99b67523cea6feba2f76679f97f2cfe" kindref="member">code</ref>));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>errorObj.set(</highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal">,<sp/>e.<ref refid="classError_1aa4713ef3ee9c3c0da43a54b01949510d" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>errorObj.set(</highlight><highlight class="stringliteral">&quot;stackTrace&quot;</highlight><highlight class="normal">,<sp/>e.<ref refid="classError_1a4051d2413bfd2780250043fc9c412865" kindref="member">stackTrace</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>jresult.set(</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">,<sp/>errorObj);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>jresult.set(</highlight><highlight class="stringliteral">&quot;success&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jresult;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/error.cpp"/>
  </compounddef>
</doxygen>
